#!/bin/python
#coding: utf-8

import datetime

def get_gujia(j, c, ym):
	a = int(j)
	b = int(c)
	# 用户需要输入三个参数：
 	# 1） 新车购买价格  A
	# 2） 行驶里程  B
	# 3） 购买日期  输入年份月份，计算出月份数C
	# 根据里程计算出来的二手车参考价为D1，根据购买日期计算出的二手车参考价为D2，最终的计算出的二手车参考价格为 D=(D1+D2)/2
	d = (get_D1(a, b) + get_D2(a, ym)) /2
	return fix_d(a, d)

def fix_d(a, d):
	# 当车价在20万-30万之间时，对估算结果增加1万元；
	# 车价在30万-40万之间时，对估算结果增加2万元；
	# 车价在40万-50万区间，估算结果增加3万元；
	# 车价在50万-60万之间，估算结果增加4万元；
	# 以此类推，车价每增加10万元，结果增加1万元。
	return d + ((a/100000)-1)*10000
	
def get_D1(a, b):
	# If  B<30000,D1=12/15 *A;
	# If  30000<B<60000，D1=10/15 *A；
	# If  60000<B<90000, D1=8/15 *A
	# If  90000<B<120000,D1=6/15 *A
	# If  120000<B<150000,D1=4/15 *A
	# If  150000<B<180000,D1=3/15 *A
	# If  180000<B<240000, D1=2/15 *A
	# If  240000<B<300000,D1=1/15 *A
	# 当输入的里程为边界值时，按照高的值计算。比如B=60000时，按照10/15计算而不是8/15。
	f = [12, 10, 8, 6, 4, 3, 2, 2, 1, 1]
	b = b-1 if b>0 else 0
	return f[(b/30000)]*a / 15

def get_D2(a, ym):
	# 根据用户输入的年份和月份，计算出到现在的月份数
	# 比如用户上牌日期是200908，现在是201305，那么中间的月份数为C= 45个月。
	# If  C<12，D2=12/15 *A
	# If  12<C<24, D2=11/15*A
	# If  24<C<36,D2=10/15*A
	# If  36<C<48，D2=9/15 *A
	# IF  48<C<60,D2=8/15*A
	# IF  60<C<72,D2=7/15*A
	# IF  72<C<84,D2=6/15*A
	# IF  84<C<96,D2=5/15*A
	# IF  96<C<108,D2=4/15*A
	# IF  108<C<120,D2=3/15*A
	# IF  120<C<132,D2=2/15*A
	# IF  144<C<156,D2=1/15*A
	# 当计算出来的C值为边界值时，取结果大的值计算。比如计算出结果C=36，则按D2=10/15计算。
	[s1, s2] = ym
	[y, m] = [ int(s1), int(s2) ]
	t = datetime.datetime.today()
	d = (t.year - y) * 12 + t.month - m
	d = d-1 if d>0 else 0
	return (12-d/12)*a/15

if __name__ == '__main__':
	# 比如68万的普拉多，2010年5月购买，里程6万公里。
	# 按照公式计算D1=10/15X68=45万
	# D2=9/15X68=40.8万
	# D=(D1+D2)/2=42.9万
	# 补偿5万元以后，估价是47.9万元。
	a = 680000
	b = 60000
	c = [2010, 5]
	print get_D1(a, b)
	print get_D2(a, c)
	print get_gujia(a, b, c)
